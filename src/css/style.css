@charset "utf-8";
/*-------------------------------------->

<--------------------------------------*/

.block {
	display: block;
}
.container {
	width: min(100% - 30px, 1200px);
	margin-inline: auto;
}

.flex {
	display: flex;
}
.f-col {
	flex-direction: column;
}

.circle {
	border-radius: 50%;
}

.cursor-pointer {
	cursor: pointer;
}



a {
	text-decoration: none;
	color: inherit;
}

ul {
	list-style-type: none;
}

body {
	background-color: #334;
	overflow-x: hidden;
	color: #fefefe;
	font-family: "Poppins", Arial, sans-serif;
	height: 200svh;
}

/*-------------------------------------->
Animations 
<--------------------------------------*/

header { 
	position: relative;
	height: 90svh;
	width: 100svw;

	&::before {
		content: '';
		width: 200px;
		height: 200px;
		position: fixed;
		z-index: -100;
		margin: 100px;
		border-radius: 50%;
		background-color: #fefefe;
	}
}

h1 {
	width: 100%;
	font-size: 3.5rem;
	position: fixed;
	text-align: center;
	margin-top: 50px;
	z-index: -100;
}

.Z-100 {
	width: 100svw;
	height: auto;
	object-fit: cover;
	position: absolute;
	bottom: -5svw;
	z-index: -100;
	animation-name: zMinus;
  animation-timeline: scroll();
  animation-duration: 1s; 
}

.Z-00 {
	width: 100svw;
	height: auto;
	object-fit: cover;
	position: absolute;
	bottom: -15svw;
	z-index: 0;
	animation-name: zZero;
  animation-timeline: scroll();
  animation-duration: 1s; 
}

.idkyet {
	width: 100svw;
	height: auto;
	object-fit: cover;
	position: absolute;
	bottom: 0;
	z-index: 0;
	animation-name: idkyet;
  animation-timeline: scroll();
  animation-duration: 1s; 
}

.Zplus100 {
	width: 100svw;
	height: auto;
	object-fit: cover;
	position: absolute;
	bottom: -15svw;
	z-index: 100;
  animation-name: zPlus;
  animation-timeline: scroll();
  animation-duration: 1s; 
}


/*-------------------------------------->
Animations 
<--------------------------------------*/


main {
	width: 100%; 
	height: fit-content;
	background-color: #012;
	position: relative;
	z-index: 1000;
}

.nav-wrapper {
	width: 100%;
	height: 80px;
	line-height: 80px;
	justify-content: center;
	background-color: #012;
	transform: translateY(-100%);
  transition: transform 0.4s ease;
	position: fixed;
	top: 0;
	left: 0;
  z-index: 1000; 
}

.visible {
	transform: translateY(0);
}

nav {
	width: 100%;
	height: 80px;
	line-height: 80px;
	justify-content: space-between;
}

h2 {
	font-size: 2rem;
}

ul {
	font-size: 1.6rem;
	width: 500px;
	justify-content: space-between;
}

/*-------------------------------------->
Animations 
<--------------------------------------*/

@keyframes zMinus {
	0% {
		transform: translate(0, 0);
	}
	100% {
		transform: translate(0, -40svw);
	}
}

@keyframes zZero {
	0% {
		transform: translate(0, 0);
	}
	100% {
		transform: translate(0, 14svw);
	}
}

@keyframes idkyet {
	0% {
		transform: translate(0, 0);
	}
	100% {
		transform: translate(0, 12svw);
	}
}

@keyframes zPlus {
	0% {
		transform: translate(0, 0);
	}
	100% {
		transform: translate(0, -15svw);
	}
}


/*

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Modal Transition</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <button id="open-modal">Open Modal</button>

  <div id="modal" class="modal hidden">
    <div class="modal-content">
      <span id="close-modal" class="close-button">&times;</span>
      <h2>Modal Title</h2>
      <p>This is a modal with a smooth transition.</p>
    </div>
  </div>

  <script src="script.js"></script>
</body>
</html>

/* Base styles 
body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background-color: #f4f4f4;
}

button {
  padding: 10px 20px;
  font-size: 16px;
  cursor: pointer;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  transition: background-color 0.3s ease;
}

button:hover {
  background-color: #0056b3;
}

/* Modal styles 
.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0;
  visibility: hidden;
  transform: scale(1.1); /* Slightly larger for a pop-in effect 
  transition: opacity 0.3s ease, visibility 0.3s ease, transform 0.3s ease;
}

.modal-content {
  background-color: white;
  padding: 20px;
  border-radius: 10px;
  text-align: center;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.close-button {
  position: absolute;
  top: 10px;
  right: 20px;
  font-size: 24px;
  cursor: pointer;
}

/* Active modal state 
.modal.visible {
  opacity: 1;
  visibility: visible;
  transform: scale(1);
}

// Select elements
const openModalButton = document.getElementById('open-modal');
const closeModalButton = document.getElementById('close-modal');
const modal = document.getElementById('modal');

// Open modal
openModalButton.addEventListener('click', () => {
  modal.classList.remove('hidden');
  modal.classList.add('visible');
});

// Close modal
closeModalButton.addEventListener('click', () => {
  modal.classList.remove('visible');
  modal.classList.add('hidden');
});
/*